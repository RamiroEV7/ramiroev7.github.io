# Instrucciones para Configuración, Desarrollo y Despliegue con Vite

Este documento te guiará a través de un flujo de trabajo moderno y profesional utilizando Vite para desarrollar, compilar y desplegar tu aplicación en GitHub Pages.

---

### Prerrequisitos
- Tener [Node.js](https://nodejs.org/) (versión 18+ recomendada) y npm instalados.
- Tener una cuenta de [GitHub](https://github.com/).
- Tener [Git](https://git-scm.com/) instalado en tu computadora.

---

### Estructura de Archivos del Proyecto

La nueva estructura del proyecto utiliza Vite para una experiencia de desarrollo superior.

```
/tu-proyecto/
├── components/
│   ├── ... (todos tus componentes)
├── utils/
│   └── UnirPdf.ts
├── App.tsx
├── antes.png
├── despues.png
├── index.html
├── index.tsx
├── instructions.txt
├── metadata.json
├── package.json
├── tsconfig.json     <-- (Nuevo: configuración de TypeScript)
└── vite.config.ts    <-- (Nuevo: configuración de Vite)
```

**Nota:** El archivo `build.js` ha sido eliminado y reemplazado por la configuración de Vite.

---

## Parte 1: Configuración Inicial

Solo necesitas hacer esto una vez.

1.  **Descarga los Archivos:** Asegúrate de tener todos los archivos del proyecto, incluyendo los nuevos `vite.config.ts` y `tsconfig.json`.

2.  **Abre la Terminal:**
    - Abre una terminal o línea de comandos.
    - Navega hasta la carpeta del proyecto. Ejemplo: `cd ruta/a/tu/proyecto`.

3.  **Instala las Dependencias:**
    - Ejecuta el siguiente comando. Esto leerá el `package.json` e instalará Vite, React y todas las herramientas necesarias.
      ```bash
      npm install
      ```

---

## Parte 2: Desarrollar Localmente

Cuando quieras trabajar en tu aplicación y ver los cambios al instante.

1.  **Inicia el Servidor de Desarrollo:**
    - En la terminal (dentro de la carpeta del proyecto), ejecuta:
      ```bash
      npm run dev
      ```
      o también:
      ```bash
      npm start
      ```
    - Vite iniciará un servidor de desarrollo ultrarrápido y abrirá tu navegador en `http://localhost:8080`.
    - Disfruta del **Hot Module Replacement (HMR)**: cuando guardes un cambio en tu código, la página se actualizará instantáneamente sin necesidad de recargarla por completo, manteniendo el estado de la aplicación.

---

## Parte 3: Compilar para Producción

Cuando tu aplicación esté lista para ser desplegada, necesitas crear una versión optimizada.

1.  **Ejecuta el Script de Compilación:**
    - En la terminal, ejecuta:
      ```bash
      npm run build
      ```
    - Este comando hará lo siguiente:
      - Verificará que tu código TypeScript no tenga errores.
      - Usará Vite para compilar, empaquetar y optimizar todo tu código (TSX, CSS, etc.) en archivos estáticos muy eficientes.
      - Creará una carpeta llamada `dist` con la versión final de tu aplicación, lista para ser subida a cualquier servidor web.

2.  **(Opcional) Previsualiza la Compilación:**
    - Si quieres probar la versión de producción en tu máquina local antes de subirla, ejecuta:
      ```bash
      npm run preview
      ```
    - Esto levantará un servidor simple con los archivos de la carpeta `dist`.

---

## Parte 4: Desplegar en GitHub Pages

Sigue estos pasos para publicar tu aplicación en internet de forma gratuita.

1.  **Crea un Repositorio en GitHub:**
    - Ve a tu perfil de GitHub y crea un nuevo repositorio público. No lo inicialices con un archivo `README`.

2.  **Sube tu Código Fuente a GitHub:**
    - En tu terminal, ejecuta los siguientes comandos (reemplaza `TU_USUARIO` y `TU_REPOSITORIO`).
      ```bash
      # Inicializa git si no lo has hecho
      git init
      git add .
      git commit -m "Migración a Vite y configuración inicial"

      # Conecta tu repositorio local con el de GitHub
      git remote add origin https://github.com/TU_USUARIO/TU_REPOSITORIO.git

      # Renombra la rama a 'main'
      git branch -M main

      # Sube tu código fuente
      git push -u origin main
      ```

3.  **Despliega la Versión de Producción:**
    - Ahora, simplemente ejecuta este comando en tu terminal:
      ```bash
      npm run deploy
      ```
    - Este comando se encarga de todo: primero ejecuta `npm run build` para generar la carpeta `dist` y luego la publica en una rama especial (`gh-pages`) en tu repositorio de GitHub.

4.  **Configura GitHub Pages:**
    - En la página de tu repositorio en GitHub, ve a **"Settings"** -> **"Pages"**.
    - En la sección "Build and deployment", bajo "Source", selecciona **"Deploy from a branch"**.
    - En la sección "Branch", elige la rama `gh-pages` y la carpeta `/(root)`.
    - Haz clic en **"Save"**.

5.  **¡Listo!**
    - Después de unos minutos, tu sitio estará disponible en la URL que te proporciona GitHub Pages, como `https://TU_USUARIO.github.io/TU_REPOSITORIO/`.